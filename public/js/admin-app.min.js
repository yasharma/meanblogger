!function(){"use strict";angular.module("app.factories",[]).factory("AuthenticationService",function(){var auth={isLogged:!1};return auth}).factory("RestSvr",["$http",function($http){return{login:function(apiUrl,data){return $http.post(apiUrl,data).then(function(response){return response.data.errors?{errors:response.data.errors}:{user:response.data.user,token:response.data.token}})},paginate:function(apiUrl,params,queryString){var p=angular.isUndefined(params)?"":params;angular.isUndefined(queryString)?"":queryString;return $http.get(apiUrl,p).then(function(response){return{records:response.data.records,paging:response.data.paging}})},get:function(apiUrl,params){angular.isUndefined(params)?null:params;return $http.get(apiUrl,params).then(function(response){return{records:response.data.records}})},getById:function(apiUrl,id){return $http.get(apiUrl+id).then(function(response){return{record:response.data}})},post:function(apiUrl,data){return $http.post(apiUrl,data).then(function(response){return 11e3===response.data.code&&"MongoError"===response.data.name?{result:!1,message:"Category already exist"}:{result:response.data.result,message:response.data.message,record:response.data.record}})},put:function(apiUrl,id,data){return $http.put(apiUrl+id,data).then(function(response){return 11e3===response.data.code&&"MongoError"===response.data.name?{result:!1,message:"Category already exist"}:{result:response.data.result,message:response.data.message,record:response.data.record}})},delete:function(apiUrl,id){return $http.delete(apiUrl+id).then(function(response){return{message:response.data.message,result:response.data.result}})}}}])}(),function(){"use strict";angular.module("app.directives",[]).directive("header",function(){return{restrict:"A",templateUrl:"partials/header.html"}}).directive("sidebar",function(){return{restrict:"A",templateUrl:"partials/sidebar.html",controller:["$scope","$location",function($scope,$location){$scope.search=function(isValid){isValid&&$location.path("/search").search("q",$scope.post.search)}}]}}).directive("adminHeader",function(){return{restrict:"A",templateUrl:"partials/admin-header.html",controller:["$scope","$filter",function($scope,$filter){}]}}).directive("adminSidebar",function(){return{restrict:"A",templateUrl:"partials/admin-sidebar.html",controller:["$scope","$filter",function($scope,$filter){}]}}).directive("navMenu",["$location",function($location){return function(scope,element,attrs){for(var links=element.find("a"),urlMap={},activeClass=attrs.navMenu||"active",i=links.length-1;i>=0;i--){var link=angular.element(links[i]),url=angular.isUndefined(link.attr("href"))?link.attr("ng-href"):link.attr("href");"#"===url.substring(0,1)?urlMap[url.substring(1)]=link:"admin.html#"===url.substring(0,url.indexOf("/"))?urlMap[url.substring(url.indexOf("/"))]=link:urlMap[url]=link}scope.$on("$routeChangeStart",function(){var path=urlMap[$location.path()];links.parent("li").removeClass(activeClass),path&&path.parent("li").addClass(activeClass)})}}]).directive("setHeight",["$window",function($window){return{restrict:"A",link:function(scope,element,attrs){element.css("min-height",$window.innerHeight-50+"px")}}}])}(),function(){"use strict";angular.module("app",["ngRoute","app.controllers","textAngular","app.factories","toaster","app.directives","ngAnimate","angular-loading-bar","ui.bootstrap","LocalStorageModule","angularFileUpload"]).config(["$routeProvider","cfpLoadingBarProvider","$httpProvider",function($routeProvider,cfpLoadingBarProvider,$httpProvider){cfpLoadingBarProvider.includeSpinner=!1,$routeProvider.when("/",{templateUrl:"admin/views/login.html",controller:"AdminController"}).when("/dashboard",{templateUrl:"dashboard/views/dashboard.html",controller:"DashboardController"}).when("/posts",{templateUrl:"admin/views/admin_posts.html",controller:"AdminPostController"}).when("/create",{templateUrl:"admin/views/create_posts.html",controller:"CreateController"}).when("/edit-post/:id",{templateUrl:"admin/views/create_posts.html",controller:"EditPostController"}).when("/category",{templateUrl:"category/views/category.html",controller:"CategoryController"}).when("/create-category",{templateUrl:"category/views/create_category.html",controller:"NewCategoryController"}).when("/edit-category/:id",{templateUrl:"category/views/create_category.html",controller:"EditCategoryController"}).otherwise({redirectTo:"/"}),$httpProvider.defaults.useXDomain=!0,delete $httpProvider.defaults.headers.common["X-Requested-With"];var interceptor=["$q","$window","$rootScope","localStorageService","AuthenticationService","$timeout",function($q,$window,$rootScope,localStorageService,AuthenticationService,$timeout){return{request:function(config){config.headers=config.headers||{};var token=localStorageService.get("token");return token&&(config.headers.Authorization="Bearer "+token,AuthenticationService.isLogged=1,$rootScope.isLogged=1),config},requestError:function(rejection){return $q.reject(rejection)},response:function(response){return $timeout(function(){$rootScope.Message={type:"fade"}},5e3),response||$q.when(response)},responseError:function(rejection){return null!==rejection&&400===rejection.status&&(localStorageService.remove("token"),localStorageService.remove("user"),AuthenticationService.isLogged=!1,$rootScope.isLogged=!1,$window.location.href="admin.html"),$q.reject(rejection)}}}];$httpProvider.interceptors.push(interceptor)}]).run(["$rootScope","$location","localStorageService","AuthenticationService",function($rootScope,$location,localStorageService,AuthenticationService){$rootScope.$on("$routeChangeStart",function(event,nextRoute,currentRoute){if(null===nextRoute||AuthenticationService.isLogged||localStorageService.get("user")){var token=localStorageService.get("token");"/"==$location.path()&&token&&$location.path("/dashboard")}else AuthenticationService.isLogged=0,$location.path("/")}),$rootScope.clearToken=function(){localStorageService.remove("token"),localStorageService.remove("user"),$rootScope.isLogged=!1,delete $rootScope.user,$location.path("/")},$rootScope.user=localStorageService.get("user")}]),angular.module("app.controllers",[])}(),function(){"use strict";angular.module("app.controllers").controller("AdminController",["$scope","$rootScope","RestSvr","localStorageService","AuthenticationService","$location",function($scope,$rootScope,RestSvr,localStorageService,AuthenticationService,$location){console.log("Admin"),$scope.login=function(isValid){isValid&&RestSvr.login("/users/login",$scope.user).then(function(response){$scope.error=null,response.errors?$scope.error=response.errors:(localStorageService.set("token",response.token),localStorageService.set("user",{id:response.user._id,username:response.user.username,email:response.user.email,status:response.user.status,created:response.user.created}),AuthenticationService.isLogged=!0,$rootScope.isLogged=!0,$rootScope.user=localStorageService.get("user"),$location.path("/dashboard"))})}}]).controller("AdminPostController",["$scope","RestSvr","toaster",function($scope,RestSvr,toaster){$scope.forceEllipses=!0,$scope.maxSize=15,$scope.paging={page:1};var load=function(){RestSvr.paginate("/posts/paginate",{params:{page:$scope.paging.page}}).then(function(response){$scope.posts=response.records,$scope.paging=response.paging})};$scope.pageChanged=function(){load()},$scope.editCategory=function(index){$location.path("/edit-posts/"+$scope.posts[index]._id)},$scope.toggleStatus=function(index){var e=$scope.posts[index],status={true:!1,false:!0};e.status=status[e.status],RestSvr.put("posts/",e._id,e).then(function(response){toaster.pop({type:"success",title:"Success",body:response.message,showCloseButton:!0}),load()})},$scope.deletePost=function(index){var e=$scope.posts[index];RestSvr.delete("/posts/",e._id).then(function(response){toaster.pop({type:"success",title:"Success",body:response.message,showCloseButton:!0}),load()})},load()}]).controller("CreateController",["$scope","$location","FileUploader","localStorageService","$window","$timeout","toaster",function($scope,$location,FileUploader,localStorageService,$window,$timeout,toaster){$scope.uploader=new FileUploader({url:"/posts",headers:{Authorization:"Bearer "+localStorageService.get("token")},alias:"image"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return"|jpg|png|jpeg|bmp|gif|".indexOf(type)!==-1}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onBeforeUploadItem=function(item){item.formData.push($scope.post)},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){console.log(response.message)},$scope.uploader.onSuccessItem=function(item,response,status,headers){$scope.uploader.clearQueue(),response.post&&(toaster.pop({type:"success",title:"Success",body:response.message,showCloseButton:!0}),$location.path("/posts"))},$scope.save=function(){$scope.uploader.uploadAll()}}]).controller("EditPostController",["$scope","$location","FileUploader","localStorageService","$window","$timeout","toaster","$routeParams",function($scope,$location,FileUploader,localStorageService,$window,$timeout,toaster,routeParams){RestSvr.getById("post/",$routeParams.id).then(function(response){$scope.post=response.record}),$scope.uploader=new FileUploader({url:"/posts",headers:{Authorization:"Bearer "+localStorageService.get("token")},alias:"image"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return"|jpg|png|jpeg|bmp|gif|".indexOf(type)!==-1}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onBeforeUploadItem=function(item){item.formData.push($scope.post)},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){console.log(response.message)},$scope.uploader.onSuccessItem=function(item,response,status,headers){$scope.uploader.clearQueue(),response.post&&(toaster.pop({type:"success",title:"Success",body:response.message,showCloseButton:!0}),$location.path("/posts"))},$scope.save=function(){$scope.uploader.uploadAll()}}])}(),function(){"use strict";angular.module("app.controllers").controller("DashboardController",["$scope","$http",function($scope,$http){}])}(),function(){"use strict";angular.module("app.controllers").controller("CategoryController",["$scope","RestSvr","toaster","$location",function($scope,RestSvr,toaster,$location){$scope.paging={page:1};var load=function(){RestSvr.paginate("/category/paginate",{params:{page:$scope.paging.page}}).then(function(response){$scope.categories=response.records,$scope.paging=response.paging})};$scope.pageChanged=function(){load()},$scope.editCategory=function(index){$location.path("/edit-category/"+$scope.categories[index]._id)},$scope.deleteCategory=function(index){var e=$scope.categories[index];RestSvr.delete("/category/",e._id).then(function(response){toaster.pop({type:"success",title:"Success",body:response.message,showCloseButton:!0}),load()})},$scope.toggleStatus=function(index){var e=$scope.categories[index],status={true:!1,false:!0};e.status=status[e.status],RestSvr.put("category/",e._id,e).then(function(response){toaster.pop({type:"success",title:"Success",body:response.message,showCloseButton:!0}),load()})},load()}]).controller("NewCategoryController",["$scope","RestSvr","$location","toaster",function($scope,RestSvr,$location,toaster){$scope.heading="Create a New Category",$scope.buttonName="Create",$scope.save=function(isValid){isValid&&RestSvr.post("/category/create",$scope.category).then(function(response){response.result?(toaster.pop({type:"success",title:"Success",body:response.message,showCloseButton:!0}),$location.path("/category")):toaster.pop({type:"error",title:"Error",body:response.message,showCloseButton:!0})})},$scope.cancel=function(){$location.path("/category")}}]).controller("EditCategoryController",["$scope","$location","$rootScope","RestSvr","$routeParams","toaster",function($scope,$location,$rootScope,RestSvr,$routeParams,toaster){$scope.heading="Update Category",$scope.buttonName="Update",RestSvr.getById("category/",$routeParams.id).then(function(response){$scope.category=response.record}),$scope.save=function(isValid){isValid&&RestSvr.put("category/",$scope.category._id,$scope.category).then(function(response){response.result?(toaster.pop({type:"success",title:"Success",body:response.message,showCloseButton:!0}),$location.path("/category")):toaster.pop({type:"error",title:"Error",body:response.message,showCloseButton:!0})})},$scope.cancel=function(){$location.path("/category")}}])}();